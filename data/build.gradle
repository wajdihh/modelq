apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
android {

    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation project(':domain')

    /**
     * General libraries
     */
    implementation   "org.jetbrains.kotlin:kotlin-stdlib-jre8:${rootProject.ext.kotlinVersion}"

    //OkHttp
    implementation   "com.squareup.okhttp3:okhttp:${rootProject.ext.okHttpVersion}"
    implementation   "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okHttpVersion}"

    //Gson
    implementation   "com.google.code.gson:gson:${rootProject.ext.gsonVersion}"

    // RX java
    implementation   "io.reactivex.rxjava2:rxkotlin:${rootProject.ext.rxKotlinVersion}"
    implementation   "javax.inject:javax.inject:${rootProject.ext.javaxInjectVersion}"
    implementation   "javax.annotation:jsr250-api:${rootProject.ext.javaxAnnotationVersion}"

    // Retrofit
    implementation   "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofitVersion}"
    implementation   "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofitVersion}"
    implementation   "com.squareup.retrofit2:adapter-rxjava2:${rootProject.ext.retrofitVersion}"

    // Room
    implementation   "android.arch.persistence.room:runtime:${rootProject.ext.roomVersion}"
    kapt             "android.arch.persistence.room:compiler:${rootProject.ext.roomVersion}"
    implementation   "android.arch.persistence.room:rxjava2:${rootProject.ext.roomVersion}"

    /**
     * Testing libraries
     */

    testImplementation  "junit:junit:${rootProject.ext.jUnitVersion}"
    testImplementation  "org.assertj:assertj-core:${rootProject.ext.assertJVersion}"
    testImplementation  "com.nhaarman:mockito-kotlin:${rootProject.ext.mockitoKotlinVersion}"
    testImplementation  "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}"
    testImplementation  "org.robolectric:robolectric:${rootProject.ext.robolectricVersion}"
    testImplementation  "android.arch.core:core-testing:${rootProject.ext.roomVersion}"
    testImplementation  "com.android.support.test:runner:${rootProject.ext.androidSupportRunnerVersion}"
    testImplementation  "com.android.support.test:rules:${rootProject.ext.androidSupportRulesVersion}"
    //Room
    testImplementation  "android.arch.persistence.room:testing:${rootProject.ext.roomVersion}"
}
