apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.wajdihh.modelq"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled = true
        testInstrumentationRunner "org.buffer.android.boilerplate.ui.test.TestRunner"
    }
    signingConfigs {
        debug {
            storeFile file(DEBUG_STORE_FILE)
            storePassword DEBUG_STORE_PASSWORD
            keyAlias DEBUG_KEY_ALIAS
            keyPassword DEBUG_KEY_PASSWORD
        }
        release {

        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    picassoVersion = "2.5.2"
    mapVersion = "11.8.0"
}
dependencies {
    implementation project(':presentation')
    implementation project(':data')

    /**
     * General libraries
     */
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintLayoutVersion}"
    implementation "javax.annotation:jsr250-api:${rootProject.ext.javaxAnnotationVersion}"
    implementation "com.android.support:multidex:${rootProject.ext.multidexVersion}"

    //Dagger
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.daggerVersion}"
    implementation "com.google.dagger:dagger:${rootProject.ext.daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${rootProject.ext.daggerVersion}"
    //RX
    implementation "io.reactivex.rxjava2:rxkotlin:${rootProject.ext.rxKotlinVersion}"
    implementation "io.reactivex.rxjava2:rxandroid:${rootProject.ext.rxAndroidVersion}"
    implementation "javax.inject:javax.inject:${rootProject.ext.javaxInjectVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:${rootProject.ext.kotlinVersion}"
    //Android support
    implementation "com.android.support:support-annotations:${rootProject.ext.supportLibraryVersion}"
    implementation "com.android.support:support-v4:${rootProject.ext.supportLibraryVersion}"
    implementation "com.android.support:support-v13:${rootProject.ext.supportLibraryVersion}"
    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibraryVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.ext.supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.supportLibraryVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibraryVersion}"
    //OkHttp [JUST TO AVOID DAGGER : Exception when init the Interceptor]
    implementation   "com.squareup.okhttp3:okhttp:${rootProject.ext.okHttpVersion}"
    implementation   "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okHttpVersion}"
    // Picasso
    implementation "com.squareup.picasso:picasso:${picassoVersion}"
    // Below is the Google Play Services dependency required for using the Google Maps Android API
    implementation "com.google.android.gms:play-services-maps:${mapVersion}"
}
